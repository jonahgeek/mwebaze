{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Projects/mwebaze/pages/writings/[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport { BookOpen } from \"react-feather\";\nimport ProgressBar from \"react-scroll-progress-bar\";\nimport readingTime from \"reading-time\";\nimport Layout from \"../../components/Layout\";\nimport CodeBlock from \"../../components/CodeBlock\";\n\nfunction Writing({\n  content,\n  data\n}) {\n  const frontmatter = data;\n  const {\n    title,\n    author\n  } = frontmatter;\n  const avatar = `https://images.weserv.nl/?url=https://unavatar.now.sh/twitter/${author.twitter}&w=40`;\n  const {\n    text\n  } = readingTime(content);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"writing-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(ProgressBar, {\n    height: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), __jsx(Layout, {\n    secondaryPage: true,\n    noHead: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 50\n    },\n    className: \"article-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    as: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"back-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"back\")), __jsx(\"h1\", {\n    className: \"main-h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: \"reading-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(BookOpen, {\n    size: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), text), __jsx(\"div\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: `https://twitter.com/${author.twitter}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer nofollow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), author.name)), __jsx(\"div\", {\n    className: \"writing-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    source: content,\n    escapeHtml: false,\n    renderers: {\n      code: CodeBlock,\n      link: props => {\n        if (!props.href.startsWith(\"http\")) {\n          return __jsx(\"a\", {\n            href: props.href,\n            rel: \"nofollow noreferrer noopener\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }\n          }, props.children);\n        }\n\n        return __jsx(\"a\", {\n          href: props.href,\n          rel: \"nofollow noreferrer noopener\",\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, props.children);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"hope-liked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"This should help.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), \"\\u2014 Jonahgeek\")))));\n}\n\nWriting.getInitialProps = async context => {\n  const {\n    slug\n  } = context.query;\n  const content = await import(`../../writings/${slug}.md`);\n  const data = matter(content.default);\n  return _objectSpread({}, data);\n};\n\nexport default Writing;","map":{"version":3,"sources":["/home/jonathan/Projects/mwebaze/pages/writings/[slug].js"],"names":["React","matter","ReactMarkdown","Link","BookOpen","ProgressBar","readingTime","Layout","CodeBlock","Writing","content","data","frontmatter","title","author","avatar","twitter","text","marginTop","name","code","link","props","href","startsWith","children","getInitialProps","context","slug","query","default"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport { BookOpen } from \"react-feather\";\nimport ProgressBar from \"react-scroll-progress-bar\";\nimport readingTime from \"reading-time\";\n\nimport Layout from \"../../components/Layout\";\nimport CodeBlock from \"../../components/CodeBlock\";\n\nfunction Writing({ content, data }) {\n  const frontmatter = data;\n  const { title, author } = frontmatter;\n  const avatar = `https://images.weserv.nl/?url=https://unavatar.now.sh/twitter/${author.twitter}&w=40`;\n  const { text } = readingTime(content);\n\n  return (\n    <>\n      <div className=\"writing-progress\">\n        <ProgressBar height=\"5px\" />\n      </div>\n\n      <Layout secondaryPage noHead>\n        <div style={{ marginTop: 50 }} className=\"article-body\">\n          <Link href=\"/\" as=\"/\">\n            <a className=\"back-button\">back</a>\n          </Link>\n\n          <h1 className=\"main-h1\">{title}</h1>\n\n          <div className=\"reading-time\">\n            <BookOpen size=\"16px\" />\n            {text}\n          </div>\n\n          <div className=\"author\">\n            <a\n              href={`https://twitter.com/${author.twitter}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer nofollow\"\n            >\n              <img src={avatar} />\n              {author.name}\n            </a>\n          </div>\n\n          <div className=\"writing-container\">\n            <ReactMarkdown\n              source={content}\n              escapeHtml={false}\n              renderers={{\n                code: CodeBlock,\n                link: (props) => {\n                  if (!props.href.startsWith(\"http\")) {\n                    return (\n                      <a href={props.href} rel=\"nofollow noreferrer noopener\">\n                        {props.children}\n                      </a>\n                    );\n                  }\n\n                  return (\n                    <a\n                      href={props.href}\n                      rel=\"nofollow noreferrer noopener\"\n                      target=\"_blank\"\n                    >\n                      {props.children}\n                    </a>\n                  );\n                },\n              }}\n            />\n\n            <div />\n\n            <div className=\"hope-liked\">\n              This should help.\n              <br />— Jonahgeek\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </>\n  );\n}\n\nWriting.getInitialProps = async (context) => {\n  const { slug } = context.query;\n  const content = await import(`../../writings/${slug}.md`);\n  const data = matter(content.default);\n\n  return { ...data };\n};\n\nexport default Writing;\n"]},"metadata":{},"sourceType":"module"}