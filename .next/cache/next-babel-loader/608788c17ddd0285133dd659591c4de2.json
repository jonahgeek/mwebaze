{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/jonathan/Projects/mwebaze/pages/blog.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport matter from \"gray-matter\";\nimport Layout from \"../components/Layout\";\n\nfunction formatDate(date) {\n  var options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  var today = new Date(date);\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\nfunction freshWriting(date) {\n  var writingDate = new Date(date).getTime();\n  var today = new Date().getTime();\n  return today - writingDate < 60 * 60 * 1000 * 24 * 2; // 2 days old\n}\n\nfunction Blog(_ref) {\n  var _this = this;\n\n  var blogposts = _ref.blogposts;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    secondaryPage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, blogposts.map(function (_ref2) {\n    var document = _ref2.document,\n        slug = _ref2.slug;\n    var _document$data = document.data,\n        title = _document$data.title,\n        date = _document$data.date;\n    return __jsx(Col, {\n      md: 6,\n      key: slug,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"writing-row\",\n      key: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, __jsx(Col, {\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"writing-date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, formatDate(date))), __jsx(Col, {\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: \"/blogposts/[slug]\",\n      as: \"/blogposts/\".concat(slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, freshWriting(date) && __jsx(\"div\", {\n      className: \"pulse\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 50\n      }\n    }), __jsx(\"span\", {\n      className: \"writing-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }\n    }, title)))))));\n  }))));\n}\n\n_c = Blog;\n\nBlog.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var blogposts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            blogposts = function (context) {\n              var keys = context.keys();\n              var values = keys.map(context);\n              var data = keys.map(function (key, index) {\n                var slug = key.replace(/^.*[\\\\\\/]/, \"\").split(\".\").slice(0, -1).join(\".\");\n                var value = values[index];\n                var document = matter(value[\"default\"]);\n                return {\n                  document: document,\n                  slug: slug\n                };\n              });\n              return data.slice().sort(function (a, b) {\n                return new Date(b.document.data.date) - new Date(a.document.data.date);\n              });\n            }(require.context(\"../blogposts\", true, /\\.md$/));\n\n            return _context.abrupt(\"return\", {\n              blogposts: blogposts\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/jonathan/Projects/mwebaze/pages/blog.js"],"names":["React","Link","Head","Row","Col","matter","Layout","formatDate","date","options","year","month","day","today","Date","toLocaleDateString","freshWriting","writingDate","getTime","Blog","blogposts","map","document","slug","data","title","getInitialProps","context","keys","values","key","index","replace","split","slice","join","value","sort","a","b","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { Row, Col } from \"react-flexbox-grid\";\n\nimport matter from \"gray-matter\";\nimport Layout from \"../components/Layout\";\n\nfunction formatDate(date) {\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  const today = new Date(date);\n\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\nfunction freshWriting(date) {\n  const writingDate = new Date(date).getTime();\n  const today = new Date().getTime();\n\n  return today - writingDate < 60 * 60 * 1000 * 24 * 2; // 2 days old\n}\n\nfunction Blog({ blogposts }) {\n  return (\n    <>\n      <Layout secondaryPage>\n        <Row>\n          {blogposts.map(({ document, slug }) => {\n            const {\n              data: { title, date },\n            } = document;\n\n            return (\n              <Col md={6} key={slug}>\n                <div className=\"writing-row\" key={title}>\n                  <Row>\n                    <Col md={12}>\n                      <div className=\"writing-date\">{formatDate(date)}</div>\n                    </Col>\n\n                    <Col md={12}>\n                      <Link href=\"/blogposts/[slug]\" as={`/blogposts/${slug}`}>\n                        <a>\n                          {freshWriting(date) && <div className=\"pulse\" />}\n                          <span className=\"writing-title\">{title}</span>\n                        </a>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n      </Layout>\n    </>\n  );\n}\nBlog.getInitialProps = async (context) => {\n  const blogposts = ((context) => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, \"\")\n        .split(\".\")\n        .slice(0, -1)\n        .join(\".\");\n      const value = values[index];\n      const document = matter(value.default);\n      return { document, slug };\n    });\n\n    return data\n      .slice()\n      .sort(\n        (a, b) =>\n          new Date(b.document.data.date) - new Date(a.document.data.date)\n      );\n  })(require.context(\"../blogposts\", true, /\\.md$/));\n\n  return {\n    blogposts,\n  };\n};\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}